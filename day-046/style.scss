

*,*::after,*::before{
    padding: 0%;
    margin: 0%;
    box-sizing: border-box;
}
body{
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}
$numberOfRings: 6; // update together with HTML
$numberOfDots: 12; // update together with HTML
$radius: 100;
$dotsPerCircle: 12;
$angle: 360 / $dotsPerCircle;
.frame{
    position: relative;
    height: 400px;
    width: 400px;
    background-color: rgb(71, 154, 71);
    border-radius: 5px;
    box-shadow: 2px 4px 10px 1px rgba($color: #000000, $alpha: .3);
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}
.ring{
    position: absolute;
    width: ($radius * 2) + px;
    height: ($radius * 2) + px;
}
.dot{
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #fff;
    top: ($radius) + px;
    left: ($radius) + px;
}
@for $i from 1 through $numberOfRings {
    .ring-#{$i}{
        $nullBase: $i - 1;
        animation: inout-#{$i} 6s ease-in-out;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        .dot{
            opacity: (1 - ($nullBase / 10) );
        }
    }
    
}
@for $i from 1 through $numberOfDots {
	.dot-#{$i} {
		$nullBase: $i - 1;
		$deg: ($nullBase * $angle) + deg;
		transform: translate3d(0, ($radius * -1) + px, 0) rotate($deg);
		transform-origin: 0 ($radius) + px;
	}
}

@for $i from 1 through $numberOfRings {
	@keyframes inout-#{$i} {
		$nullBase: $i - 1;
		0% {
			transform: scale(1 - ($nullBase / 7)) rotate( ($nullBase*5) + deg );
		}
		100% {
			transform: scale(1 - ($nullBase / 22)) rotate( ( ($nullBase*10) + 360) + deg);
		}
	}
}


